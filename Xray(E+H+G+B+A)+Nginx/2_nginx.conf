
#user nobody nogroup; #表示以默认用户（root）运行。若取消注释，注意修改为相应权限的用户与组。
worker_processes auto;

error_log /var/log/nginx/error.log; #错误日志的文件地址

pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    #创建自定义变量 $client_ip 实现使用 CDN 后也能获取到客户端真实 IP，其配置如下：
    map $http_x_forwarded_for $client_ip {
        "" $remote_addr;
        "~*(?P<firstAddr>([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}|([0-9]{1,3}\.){3}[0-9]{1,3})$" $firstAddr;
    }

    #启用访问日志，其调整后的配置如下：（选配）
    log_format main '$client_ip - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main; #访问日志的文件地址。（选配）

    sendfile on;

    keepalive_timeout 65;

    server {
        listen 80;
        listen [::]:80; #若无 IPv6，此项可删除。
        return 301 https://$host$request_uri; #HTTP 自动跳转 HTTPS，让网站看起来更真实。
    }

    server {
        listen 443 quic reuseport; #仅版本不小于 v1.25.0 且 SSL 库支持 QUIC 才配置，否则必须删除。
        listen [::]:443 quic reuseport; #仅版本不小于 v1.25.0 且 SSL 库支持 QUIC 才配置，否则必须删除。另外若无 IPv6，此项也可删除。
        listen unix:/dev/shm/uds88.sock proxy_protocol; #仅版本不小于 v1.25.1 才配置，否则必须删除。
        http2 on; #仅版本不小于 v1.25.1 才配置，否则必须删除。
        listen unix:/dev/shm/uds81.sock proxy_protocol; #仅版本小于 v1.25.1 才配置，否则必须删除。
        listen unix:/dev/shm/uds82.sock http2 proxy_protocol; #仅版本小于 v1.25.1 才配置，否则必须删除。
        set_real_ip_from unix:;
        real_ip_header proxy_protocol;

        ssl_certificate /home/tls/h3a.example.com/h3a.example.com.crt; #换成自己的证书，绝对路径。
        ssl_certificate_key /home/tls/h3a.example.com/h3a.example.com.key; #换成自己的密钥，绝对路径。

        ssl_protocols TLSv1.3;

        location /VLSpdG9k { #与 VLESS+XHTTP 应用中 path 对应
            grpc_pass grpc://unix:/dev/shm/uds2023.sock; #转发给本机 VLESS+XHTTP 监听进程
            grpc_set_header Host $host;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /SALdGZ9k { #与 Shadowsocks+gRPC 应用中 serviceName 对应
            if ($content_type !~ "application/grpc") {
                return 404;
            }
            client_body_buffer_size 1m;
            client_body_timeout 1h;
            client_max_body_size 0;
            grpc_pass grpc://127.0.0.1:2011; #转发给本机 Shadowsocks+gRPC 监听端口
            grpc_read_timeout 1h;
            grpc_send_timeout 1h;
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $client_ip; #使用自定义变量 $client_ip
        }

        location / {
            add_header Alt-Svc 'h3=":443"; ma=86400'; #通告 HTTP/3 server 的可用性
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用 HSTS
            root /var/www/html; #修改为自己存放的 WEB 文件路径
            index index.html index.htm;
        }
    }
}
#备注：
#1、本示例使用 XTLS Vision 配置（h3a.example.com）、CDN 流量中转（cdn.example.com） 来避免被封。
#2、本示例使用不同域名来实现介绍中各应用，其办法如下：
#1）、VLESS+Vision+TLS 仅使用 h3a.example.com 域名。
#2）、VLESS+XHTTP+TLS 客户端可随意使用 h3a.example.com 域名、cdn.example.com 域名连接。
#3）、Shadowsocks+gRPC+TLS 客户端仅使用 cdn.example.com 域名连接。
#4）、VMess+HTTPUpgrade+TLS 客户端仅使用 cdn.example.com 域名连接。
