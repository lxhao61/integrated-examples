//如下配置插入 inbounds 首位（全局参数）
    {
      "port": 443,
      "protocol": "dokodemo-door",
      "settings": {
        "address": "0.0.0.0",
        "network": "tcp",
        "followRedirect": false
      },
      "sniffing": {
        "enabled": true, //开启流量探测
        "destOverride": [
          "tls" //TLS 探测，以实现 SNI 分流应用。
        ]
      }
    },

//如下配置插入 routing 首位（如下是两个域名示例，若多个就增加相关部分即可。）（各分项参数）
      {
        "type": "field",
        "domain": [
          "h2t.example.com" //修改成自己域名
        ],
        "outboundTag": "h2t" //与 outbounds 中标签对应
      },
      {
        "type": "field",
        "domain": [
          "t2n.example.com" //修改成自己域名
        ],
        "outboundTag": "t2n" //与 outbounds 中标签对应
      },
      {
        "type": "field",
        "domain": [
          "cdn.example.com" //修改成自己域名
        ],
        "outboundTag": "cdn" //与 outbounds 中标签对应
      },

//如下配置插入 outbounds 末尾标记 blocked 部分之前（如下是两个端口/域名示例，若多个就增加相关部分即可。）（各分项参数）
    {
      "tag": "h2t", //标签，与 routing 中标签对应。
      "protocol": "freedom",
      "settings": {
        "redirect": "127.0.0.1:5443" //与应用的端口对应
      }
    },
    {
      "tag": "t2n", //标签，与 routing 中标签对应。
      "protocol": "freedom",
      "settings": {
        "redirect": "127.0.0.1:6443" //与应用的端口对应
      }
    },
    {
      "tag": "cdn", //标签，与 routing 中标签对应。
      "protocol": "freedom",
      "settings": {
        "redirect": "127.0.0.1:7443" //与应用的端口对应
      }
    },
