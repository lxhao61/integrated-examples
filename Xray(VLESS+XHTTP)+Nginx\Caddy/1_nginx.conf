
#user nobody nogroup; #表示以默认用户（root）运行。若取消注释，注意修改为相应权限的用户与组。
worker_processes auto;

error_log /var/log/nginx/error.log; #错误日志的文件地址

pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    #创建自定义变量 $client_ip 实现使用 CDN 后也能获取到客户端真实 IP，其配置如下：（选配）
    map $http_x_forwarded_for $client_ip {
        "" $remote_addr;
        "~*(?P<firstAddr>([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}|([0-9]{1,3}\.){3}[0-9]{1,3})$" $firstAddr;
    }

    #启用访问日志，其调整后的配置如下：（选配）
    log_format main '$client_ip - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main; #访问日志的文件地址。（选配）

    sendfile on;

    keepalive_timeout 65;

    server {
        listen 80;
        listen [::]:80; #若无 IPv6，此项可删除。
        return 301 https://$host$request_uri; #HTTP 自动跳转 HTTPS，让网站看起来更真实。
    }

    server {
        listen 443 ssl default_server; #仅版本不小于 v1.25.1 才配置，否则必须删除。
        listen [::]:443 ssl default_server; #仅版本不小于 v1.25.1 才配置，否则必须删除。另外若无 IPv6，此项也可删除。
        http2 on; #仅版本不小于 v1.25.1 才配置，否则必须删除。
        listen 443 ssl http2 default_server; #仅版本小于 v1.25.1 才配置，否则必须删除。
        listen [::]:443 ssl http2 default_server; #仅版本小于 v1.25.1 才配置，否必须则删除。另外若无 IPv6，此项也可删除。
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_reject_handshake on; #版本不小于 v1.19.4 才支持
    } #限定域名连接（包括禁止以 IP 方式访问网站）

    server {
        listen 443 ssl; #仅版本不小于 v1.25.1 才配置，否则必须删除。
        listen [::]:443 ssl; #仅版本不小于 v1.25.1 才配置，否则必须删除。另外若无 IPv6，此项也可删除。
        http2 on; #仅版本不小于 v1.25.1 才配置，否则必须删除。
        listen 443 ssl http2; #仅版本小于 v1.25.1 才配置，否则必须删除。
        listen [::]:443 ssl http2; #仅版本小于 v1.25.1 才配置，否则必须删除。另外若无 IPv6，此项也可删除。
        server_name cdn.example.com; #修改为自己的域名

        ssl_certificate /home/tls/cdn.example.com/cdn.example.com.crt; #换成自己的证书，绝对路径。
        ssl_certificate_key /home/tls/cdn.example.com/cdn.example.com.key; #换成自己的密钥，绝对路径。

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305; #若证书为 RSA 证书，所有 ECDSA 改为 RSA。
        ssl_prefer_server_ciphers on; #优先使用服务端的密码套件。（对如上 TLSv1.2 协议的密码套件有效）

        location /VLSpdG9k { #与 VLESS+XHTTP 应用中 path 对应
            grpc_pass grpc://127.0.0.1:2023; #转发给本机 VLESS+XHTTP 监听端口
            grpc_set_header Host $host;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用 HSTS
            root /var/www/html; #修改为自己存放的 WEB 文件路径
            index index.html index.htm;
        }
    } #若此配置块中证书与下配置块中证书使用同一个通配符证书或 SAN 证书，此部分配置可删除、相关配置合并到下配置块中。

    server {
        listen 443 quic reuseport; #仅版本不小于 v1.25.0 且 SSL 库支持 QUIC 才配置，否则必须删除。
        listen [::]:443 quic reuseport; #仅版本不小于 v1.25.0 且 SSL 库支持 QUIC 才配置，否则必须删除。另外若无 IPv6，此项也可删除。
        listen 443 ssl; #仅版本不小于 v1.25.1 才配置，否则必须删除。
        listen [::]:443 ssl; #仅版本不小于 v1.25.1 才配置，否则必须删除。另外若无 IPv6，此项也可删除。
        http2 on; #仅版本不小于 v1.25.1 才配置，否则必须删除。
        listen 443 ssl http2; #仅版本小于 v1.25.1 才配置，否则必须删除。
        listen [::]:443 ssl http2; #仅版本小于 v1.25.1 才配置，否则必须删除。另外若无 IPv6，此项也可删除。
        server_name h3a.example.com; #修改为自己的域名

        ssl_certificate /home/tls/h3a.example.com/h3a.example.com.crt; #换成自己的证书，绝对路径。
        ssl_certificate_key /home/tls/h3a.example.com/h3a.example.com.key; #换成自己的密钥，绝对路径。

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305; #若证书为 RSA 证书，所有 ECDSA 改为 RSA。
        ssl_prefer_server_ciphers on; #优先使用服务端的密码套件。（对如上 TLSv1.2 协议的密码套件有效）

        location /VLSpdG9k { #与 VLESS+XHTTP 应用中 path 对应
            grpc_pass grpc://127.0.0.1:2023; #转发给本机 VLESS+XHTTP 监听端口
            grpc_set_header Host $host;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
            add_header Alt-Svc 'h3=":443"; ma=86400'; #通告 HTTP/3 server 的可用性
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用 HSTS
            root /var/www/html; #修改为自己存放的 WEB 文件路径
            index index.html index.htm;
        }
    }
}
#备注：
#1、本示例使用不同域名来区分正常应用（h3a.example.com）与 CDN 流量中转（cdn.example.com）应用。
#2、本示例正常应用需 Nginx 启用 HTTP/3 才支持客户端使用 h3 连接。
